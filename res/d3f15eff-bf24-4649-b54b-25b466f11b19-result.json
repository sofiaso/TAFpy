{"name": "test_get_order", "status": "failed", "statusDetails": {"message": "AssertionError: Invalid status code: 404", "trace": "@pytest.mark.API\n    def test_get_order():\n        #Arrange\n        _order_id = 3\n        url = f\"{URL}{_order_id}\"\n    \n        #Act\n        r = requests.get(url=url)\n        response = Validator(r)\n    \n        #Assert\n>       response.validation_by_status(200).validation_by_json_pydantic()\n\ntests\\orders\\test_s.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.base_order.response_validator.Validator object at 0x000002513C795810>, status = 200\n\n    def validation_by_status(self, status):\n>       assert self.status_code == status, f\"Invalid status code: {self.status_code}\"\nE       AssertionError: Invalid status code: 404\n\nbase\\base_order\\response_validator.py:10: AssertionError"}, "start": 1681838484310, "stop": 1681838484981, "uuid": "06800431-b747-4d21-8fca-5795ab4d148d", "historyId": "c192c104ff2485d17d3c8e1f3a7fb43e", "testCaseId": "6edef2a8d9412524c4192d610f2dd161", "fullName": "tests.orders.test_s#test_get_order", "labels": [{"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests.orders"}, {"name": "suite", "value": "test_s"}, {"name": "host", "value": "DESKTOP-0523TNT"}, {"name": "thread", "value": "8272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.orders.test_s"}]}